os:
  - linux

dist: bionic

language: python
python:
  - 3.7

services:
  - mysql
  - redis

install:
  - pip install -r backend/requirements.txt
  - npm install -g newman

before_script:
  - node --version
  - npm --version
  - newman --version

# TODO: Reformat file as it is ugly. separatee jobs in yml, and lint as the last job to run

jobs:
  include:
    - stage: build
      script:
        - openssl aes-256-cbc -K $encrypted_3c84dcdc6bbe_key -iv $encrypted_3c84dcdc6bbe_iv -in .env.enc -out .env -d
        # login to github registry
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
        # build image
        - docker build -t docker.pkg.github.com/seluj78/pymatcha/pymatcha-api:latest .
        # push image
        - docker push docker.pkg.github.com/seluj78/pymatcha/pymatcha-api:latest
    - stage: lint
      script: make lint
    - stage: test
      script:
        # login to github registry
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
        # pull images
        - docker pull docker.pkg.github.com/seluj78/pymatcha/pymatcha-api:latest
        # run docker on port 80
        # do not forget to add env-file an environment file in Settings/CI CD/Variables
        - docker run -d -p 5000:5000 --restart always docker.pkg.github.com/seluj78/pymatcha/pymatcha-api:latest
        # run newman tests
        - newman run --color on 'PyMatcha.postman_collection.json'
      after_script:
        # stop and remove docker to prevent them from block port at next iteration/test
        - docker stop $(docker ps -a -q)
        - docker rm $(docker ps -a -q)
    - stage: lint
      script: black --check backend

notifications:
  email:
    recipients:
      - jlasne@student.42.fr
      - gmorer@student.42.fr
    on_success: change
    on_failure: always
